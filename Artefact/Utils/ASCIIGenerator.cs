using System;
using System.Collections.Generic;
using System.Text;

namespace Artefact.Utils
{
    internal static class ASCIIGenerator
    {
        // Gotten from https://fsymbols.com/generators/carty/
        private static Dictionary<char, string> asciiLetters = new Dictionary<char, string>()
        {
            {' ', @"  
  
  
  
  
  " },
            {'a', @"░█████╗░
██╔══██╗
███████║
██╔══██║
██║░░██║
╚═╝░░╚═╝" },
            {'b', @"██████╗░
██╔══██╗
██████╦╝
██╔══██╗
██████╦╝
╚═════╝░" },
            {'c', @"░█████╗░
██╔══██╗
██║░░╚═╝
██║░░██╗
╚█████╔╝
░╚════╝░" },
            {'d', @"██████╗░
██╔══██╗
██║░░██║
██║░░██║
██████╔╝
╚═════╝░" },
            {'e', @"███████╗
██╔════╝
█████╗░░
██╔══╝░░
███████╗
╚══════╝" },
            {'f', @"███████╗
██╔════╝
█████╗░░
██╔══╝░░
██║░░░░░
╚═╝░░░░░" },
            {'g', @"░██████╗░
██╔════╝░
██║░░██╗░
██║░░╚██╗
╚██████╔╝
░╚═════╝░" },
            {'h', @"██╗░░██╗
██║░░██║
███████║
██╔══██║
██║░░██║
╚═╝░░╚═╝" },
            {'i', @"██╗
██║
██║
██║
██║
╚═╝" },
            {'j', @"░░░░░██╗
░░░░░██║
░░░░░██║
██╗░░██║
╚█████╔╝
░╚════╝░" },
            {'k', @"██╗░░██╗
██║░██╔╝
█████═╝░
██╔═██╗░
██║░╚██╗
╚═╝░░╚═╝" },
            {'l', @"██╗░░░░░
██║░░░░░
██║░░░░░
██║░░░░░
███████╗
╚══════╝" },
            {'m', @"███╗░░░███╗
████╗░████║
██╔████╔██║
██║╚██╔╝██║
██║░╚═╝░██║
╚═╝░░░░░╚═╝" },
            {'n', @"███╗░░██╗
████╗░██║
██╔██╗██║
██║╚████║
██║░╚███║
╚═╝░░╚══╝" },
            {'o', @"░█████╗░
██╔══██╗
██║░░██║
██║░░██║
╚█████╔╝
░╚════╝░" },
            {'p', @"██████╗░
██╔══██╗
██████╔╝
██╔═══╝░
██║░░░░░
╚═╝░░░░░" },
            {'q', @"░██████╗░
██╔═══██╗
██║██╗██║
╚██████╔╝
░╚═██╔═╝░
░░░╚═╝░░░" },
            {'r', @"██████╗░
██╔══██╗
██████╔╝
██╔══██╗
██║░░██║
╚═╝░░╚═╝" },
            {'s', @"░██████╗
██╔════╝
╚█████╗░
░╚═══██╗
██████╔╝
╚═════╝░" },
            {'t', @"████████╗
╚══██╔══╝
░░░██║░░░
░░░██║░░░
░░░██║░░░
░░░╚═╝░░░" },
            {'u', @"██╗░░░██╗
██║░░░██║
██║░░░██║
██║░░░██║
╚██████╔╝
░╚═════╝░" },
            {'v', @"██╗░░░██╗
██║░░░██║
╚██╗░██╔╝
░╚████╔╝░
░░╚██╔╝░░
░░░╚═╝░░░" },
            {'w', @"░██╗░░░░░░░██╗
░██║░░██╗░░██║
░╚██╗████╗██╔╝
░░████╔═████║░
░░╚██╔╝░╚██╔╝░
░░░╚═╝░░░╚═╝░░" },
            {'x', @"██╗░░██╗
╚██╗██╔╝
░╚███╔╝░
░██╔██╗░
██╔╝╚██╗
╚═╝░░╚═╝" },
            {'y', @"██╗░░░██╗
╚██╗░██╔╝
░╚████╔╝░
░░╚██╔╝░░
░░░██║░░░
░░░╚═╝░░░" },
            {'z', @"███████╗
╚════██║
░░███╔═╝
██╔══╝░░
███████╗
╚══════╝" },
        };

        public static string GenerateASCII(string text)
        {
            List<string> lines = new List<string>();

            foreach (char character in text)
            {
                char lowerChar = char.ToLower(character);
                if (!asciiLetters.TryGetValue(lowerChar, out string ascii))
                {
                    throw new Exception($"Char '{lowerChar}' is not a valid ascii letter");
                }

                string[] asciiLine = ascii.Split(Environment.NewLine);

                for (int i = 0; i < asciiLine.Length; i++)
                {
                    if (i >= lines.Count)
                    {
                        lines.Add(asciiLine[i]);
                    }
                    else
                    {
                        lines[i] += asciiLine[i];
                    }
                }
            }

            return string.Join("\n", lines.ToArray());
        }
    }
}
